from sklearn.model_selection import train_test_split as split
from sklearn.neighbors import KNeighborsClassifier
from sklearn import datasets

iris = datasets.load_iris()
print('Iris data loaded...')

x_train, x_test, y_train, y_test = split(iris.data, iris.target, test_size=0.1)
print('Dataset is splited into train and test set...')
print('Size of train data and its label is ', x_train.shape, y_train.shape)
print('Size of test data and its label is ', x_test.shape, y_test.shape)


for i in range(len(iris.target_names)):
    print('Label ', i, '-', iris.target_names[i])

classifier = KNeighborsClassifier(n_neighbors=2)

classifier.fit(x_train, y_train)

y_pred = classifier.predict(x_test)

print('Result for classification using k = 2')
for r in range(0, len(x_test)):
    print('sample ', str(x_test[r]), 'Actual_Value ', str(y_test[r]), ' predicted_Value ', str(y_pred[r]))
    
print('Classification Accuracy: ', classifier.score(x_test, y_test))


from sklearn.metrics import classification_report, confusion_matrix
print('Confusion Matrix')
print(confusion_matrix(y_test, y_pred))
print('classification report')
print(classification_report(y_test, y_pred))
